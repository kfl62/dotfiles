# rbenv, for testing
eval "$(rbenv init -)"

#tmp solution (testing)
export NO_AT_BRIDGE=1

#export TERM=rxvt-unicode-256color
export EDITOR='/usr/bin/nano'
export VISUAL='/usr/bin/nano'
export PATH="$PATH:$HOME/bin"

source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /etc/profile.d/cnf.sh

for file in ~/.config/dotfiles/zsh/modules-enabled/*; do
  source $file
done

setopt nullglob
setopt NO_BG_NICE					      # don't nice background tasks
setopt NO_HUP
setopt NO_LIST_BEEP
setopt PROMPTSUBST
setopt CORRECT
setopt COMPLETE_IN_WORD
setopt IGNORE_EOF

# History
setopt APPEND_HISTORY					  # adds history
setopt INC_APPEND_HISTORY				# adds history incrementally and share it across sessions
setopt SHARE_HISTORY					  # share history between sessions ???
setopt EXTENDED_HISTORY					# add timestamps to history
setopt HIST_VERIFY
setopt HIST_IGNORE_ALL_DUPS			# don't record dupes in history
setopt HIST_REDUCE_BLANKS
setopt HIST_FCNTL_LOCK

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

cdpath=( /usr ~ ~/work )

autoload -Uz compinit
compinit

typeset -A key
key[Home]="$terminfo[khome]"
key[End]="$terminfo[kend]"
key[Insert]="$terminfo[kich1]"
key[Backspace]="$terminfo[kbs]"
key[Delete]="$terminfo[kdch1]"
key[Up]="$terminfo[kcuu1]"
key[Down]="$terminfo[kcud1]"
key[Left]="$terminfo[kcub1]"
key[Right]="$terminfo[kcuf1]"
key[PageUp]="$terminfo[kpp]"
key[PageDown]="$terminfo[knp]"

# setup key accordingly
[[ -n "$key[Home]"      ]] && bindkey -- "$key[Home]"      beginning-of-line
[[ -n "$key[End]"       ]] && bindkey -- "$key[End]"       end-of-line
[[ -n "$key[Insert]"    ]] && bindkey -- "$key[Insert]"    overwrite-mode
[[ -n "$key[Backspace]" ]] && bindkey -- "$key[Backspace]" backward-delete-char
[[ -n "$key[Delete]"    ]] && bindkey -- "$key[Delete]"    delete-char
[[ -n "$key[Up]"        ]] && bindkey -- "$key[Up]"        up-line-or-history
[[ -n "$key[Down]"      ]] && bindkey -- "$key[Down]"      down-line-or-history
[[ -n "$key[Left]"      ]] && bindkey -- "$key[Left]"      backward-char
[[ -n "$key[Right]"     ]] && bindkey -- "$key[Right]"     forward-char

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        echoti smkx
    }
    function zle-line-finish () {
        echoti rmkx
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi

bindkey "^[[1;5A" history-beginning-search-backward
bindkey "^[[1;5B" history-beginning-search-forward

# Prompt
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
precmd() { vcs_info }
setopt prompt_subst
zstyle ':vcs_info:git:*' formats "[%b]"

if ps $PPID | grep mc; then
  PROMPT='%m %3~${vcs_info_msg_0_} > '
else
  PROMPT='%B%F{cyan}%m%f %3~%b%F{red}${vcs_info_msg_0_}%f > '
fi
